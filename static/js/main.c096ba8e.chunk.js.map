{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","onKeyPress","event","setState","document","addEventListener","this","removeEventListener","className","PureComponent","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,cAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,cAV/C,oBAiBE,WACE,OACE,mCACE,qBAAKO,UAAU,MAAf,SACE,mBACEA,UAAU,eADZ,SAGGF,KAAKP,MAAMC,IAAX,kCAC8BM,KAAKP,MAAMC,KACtC,oCA1BhB,GAAyBS,iB,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c096ba8e.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\nexport class App extends PureComponent {\n  state = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.onKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.onKeyPress);\n  }\n\n  onKeyPress = (event: KeyboardEvent): void => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <p\n            className=\"App__message\"\n          >\n            {this.state.key\n              ? `The last pressed key is ${this.state.key}`\n              : 'Nothing was pressed yet'}\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}