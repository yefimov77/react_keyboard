{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","onKeyPress","event","setState","document","addEventListener","this","removeEventListener","className","PureComponent","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,cAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,cAV/C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBACEA,UAAU,eADZ,SAGGR,EAAG,mCAC4BA,EAD5B,KAEA,kCA3Bd,GAAyBS,iB,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.fa8afbe6.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\nexport class App extends PureComponent {\n  state = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.onKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.onKeyPress);\n  }\n\n  onKeyPress = (event: KeyboardEvent): void => {\n    this.setState({ key: event.key });\n  };\n\n  render(): React.ReactNode {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p\n          className=\"App__message\"\n        >\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}